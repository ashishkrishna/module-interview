{"name":"Modeling PV Modules","tagline":"Folsom Labs Interview","body":"### Welcome to GitHub Pages.\r\nThis automatic page generator is the easiest way to create beautiful pages for all of your projects. Author your page content here using GitHub Flavored Markdown, select a template crafted by a designer, and publish. After your page is generated, you can check out the new branch:\r\n\r\n```\r\n$ cd your_repo_root/repo_name\r\n$ git fetch origin\r\n$ git checkout gh-pages\r\n```\r\n\r\nIf you're using the GitHub for Mac, simply sync your repository and you'll see the new branch.\r\n\r\n### Designer Templates\r\nWe've crafted some handsome templates for you to use. Go ahead and continue to layouts to browse through them. You can easily go back to edit your page before publishing. After publishing your page, you can revisit the page generator and switch to another theme. Your Page content will be preserved if it remained markdown format.\r\n\r\n### Rather Drive Stick?\r\nIf you prefer to not use the automatic generator, push a branch named `gh-pages` to your repository to create a page manually. In addition to supporting regular HTML content, GitHub Pages support Jekyll, a simple, blog aware static site generator written by our own Tom Preston-Werner. Jekyll makes it easy to create site-wide headers and footers without having to copy them across every page. It also offers intelligent blog support and other advanced templating features.\r\n\r\n### Authors and Contributors\r\nYou can @mention a GitHub username to generate a link to their profile. The resulting `<a>` element will link to the contributor's GitHub Profile. For example: In 2007, Chris Wanstrath (@defunkt), PJ Hyett (@pjhyett), and Tom Preston-Werner (@mojombo) founded GitHub.\r\n\r\n### Support or Contact\r\nHaving trouble with Pages? Check out the documentation at http://help.github.com/pages or contact support@github.com and we’ll help you sort it out.\r\n\r\n### Single Diode Model \r\nThe Single-Diode Model is a characterization based around the full-diode equation, with key adjustments to ensure module behavior is accurate across a range of cell-temperatures.\r\n   \r\nThe single diode equation is given by:\r\n\r\n\\begin{equation}\r\n    I=I_{sc}\\cdot S - I_0(T)\\left(e^{\\frac{q}{kTa}\\left(V+IR_s\\right)}-1\\right)-\\frac{V+IR_s}{R_p}\r\n\\end{equation}\r\n\r\nThese parameters can be derived from the published module specifications, leaving only environmental variables (T and S). Typically to solve for this equation we assume the short circuit current is correct, and try to fit appropriate parameters for \\(R_s\\), \\(R_p\\), \\(I_0\\) and \\(a\\) based on the published data points (maximum power voltage and current, short-circuit current, and open-circuit voltage).\r\n</p>\r\n\r\n#### Temperature Adjustment\r\n\r\nTemperature derating plays a substantial role in module performance: increases in cell temperature have a strong impact on open-circuit voltage (typically -0.37%\\(^{\\circ}C\\)) for crystalline modules) and a minimal impact on current (0.05%\\(^{\\circ}C\\)) resulting in a net power impact of -0.5%\\(^{\\circ}C\\)).  For each module, we calculate a temperature adjustment factor, $\\tau$, to the saturation current to provide the desired relationship.\r\n\r\n\\begin{equation}\r\n    I_0(T)=I_0\\left(1+\\tau\\right)^{T-25}\r\n\\end{equation}\r\n\r\nThis parameter ignores changes to short circuit current, but ensures that the voltage and power coefficients are consistent with published module specifications for the common range of cell temperatures.\r\n\r\n#### Bypass Diodes\r\n\r\nTypically modules have 2-3 bypass diodes.  In this model we simulate each module as having only one ‘perfect’ bypass diode – if ever a module cannot produce at the voltage or current required of it, the module has no impact on the system, current passes directly through it.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}